{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nconst useSortableData = (param, config = null) => {\n  _s();\n\n  const [sortConfig, setSortConfig] = React.useState(config);\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...data];\n\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = key => {\n    let direction = \"ascending\";\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort,\n    sortConfig\n  };\n};\n\n_s(useSortableData, \"RK+7Z8/M5Gu9u9DrSbX+5MpLDnQ=\");\n\nexport default useSortableData;","map":{"version":3,"sources":["/home/estelio/Documents/React/Final/factoryww/src/components/sorted.js"],"names":["React","useSortableData","param","config","sortConfig","setSortConfig","useState","sortedItems","useMemo","sortableItems","data","sort","a","b","key","direction","items","requestSort"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAM,GAAG,IAAjB,KAA0B;AAAA;;AAChD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,KAAK,CAACM,QAAN,CAAeH,MAAf,CAApC;AAEA,QAAMI,WAAW,GAAGP,KAAK,CAACQ,OAAN,CAAc,MAAM;AACtC,QAAIC,aAAa,GAAG,CAAC,GAAGC,IAAJ,CAApB;;AACA,QAAIN,UAAU,KAAK,IAAnB,EAAyB;AACvBK,MAAAA,aAAa,CAACE,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3B,YAAID,CAAC,CAACR,UAAU,CAACU,GAAZ,CAAD,GAAoBD,CAAC,CAACT,UAAU,CAACU,GAAZ,CAAzB,EAA2C;AACzC,iBAAOV,UAAU,CAACW,SAAX,KAAyB,WAAzB,GAAuC,CAAC,CAAxC,GAA4C,CAAnD;AACD;;AACD,YAAIH,CAAC,CAACR,UAAU,CAACU,GAAZ,CAAD,GAAoBD,CAAC,CAACT,UAAU,CAACU,GAAZ,CAAzB,EAA2C;AACzC,iBAAOV,UAAU,CAACW,SAAX,KAAyB,WAAzB,GAAuC,CAAvC,GAA2C,CAAC,CAAnD;AACD;;AACD,eAAO,CAAP;AACD,OARD;AASD;;AACD,WAAON,aAAP;AACD,GAdmB,EAcjB,CAACO,KAAD,EAAQZ,UAAR,CAdiB,CAApB;;AAgBA,QAAMa,WAAW,GAAIH,GAAD,IAAS;AAC3B,QAAIC,SAAS,GAAG,WAAhB;;AACA,QACEX,UAAU,IACVA,UAAU,CAACU,GAAX,KAAmBA,GADnB,IAEAV,UAAU,CAACW,SAAX,KAAyB,WAH3B,EAIE;AACAA,MAAAA,SAAS,GAAG,YAAZ;AACD;;AACDV,IAAAA,aAAa,CAAC;AAAES,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAb;AACD,GAVD;;AAYA,SAAO;AAAEC,IAAAA,KAAK,EAAET,WAAT;AAAsBU,IAAAA,WAAtB;AAAmCb,IAAAA;AAAnC,GAAP;AACD,CAhCD;;GAAMH,e;;AAkCN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\n\nconst useSortableData = (param, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...data];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortableData;\n"]},"metadata":{},"sourceType":"module"}