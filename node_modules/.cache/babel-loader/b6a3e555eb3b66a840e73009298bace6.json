{"ast":null,"code":"var _jsxFileName = \"/home/estelio/Documents/React/Final/factoryww/src/components/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { RiCheckboxBlankCircleLine, RiCheckboxCircleLine } from \"react-icons/ri\";\nimport { AiOutlineSortAscending } from \"react-icons/ai\";\nimport \"./style/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [podaci, setPodaci] = useState([]);\n  const [data, setData] = useState(podaci);\n  const [users, setUsers] = useState([]);\n  const [sortedField, setSortedField] = React.useState(null);\n  useEffect(() => {\n    getPodaci();\n  }, []);\n\n  const getPodaci = async () => {\n    const response = await fetch(\"https://fww-demo.herokuapp.com/\");\n    const data = await response.json();\n    setPodaci(data);\n    convertData(data);\n  };\n\n  const convertData = param => {\n    let users = [];\n\n    for (let i = 0; i < param.length; i++) {\n      let country = param[i].country;\n\n      for (let j = 0; j < param[i].state.length; j++) {\n        let stateName = param[i].state[j].name;\n\n        for (let k = 0; k < param[i].state[j].users.length; k++) {\n          let user = {\n            country: country,\n            state: stateName,\n            ...param[i].state[j].users[k]\n          };\n          users.push(user);\n        }\n      }\n    }\n\n    setUsers(users);\n    setData(users);\n  };\n\n  const handleChange = value => {\n    filterData(value);\n  };\n\n  const filterData = value => {\n    let resultArray = [];\n    const regex = new RegExp(value, \"gi\");\n\n    if (!value) {\n      setData(users);\n    } else {\n      for (let i = 0; i < users.length; i++) {\n        for (const property in users[i]) {\n          if (regex.test(users[i][property])) {\n            resultArray.push(users[i]);\n            break;\n          }\n        }\n      }\n\n      setData(resultArray);\n    }\n  };\n\n  const sortTable = param => {\n    setSortedField(param);\n    let sortedUsers = [...data];\n    sortedUsers.sort((a, b) => {\n      if (a[sortedField] < b[sortedField]) {\n        return -1;\n      }\n\n      if (a[sortedField] > b[sortedField]) {\n        return 1;\n      }\n\n      return 0;\n    });\n    setData(sortedUsers);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputName\",\n        type: \"text\",\n        placeholder: \"Search by Name, Balance, Activity (true or false) or Registration Data (ex. 2014-02-22)...\",\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"padding\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Full Name\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sortSpan\",\n              onClick: () => sortTable(\"fullName\"),\n              children: /*#__PURE__*/_jsxDEV(AiOutlineSortAscending, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Balance\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sortSpan\",\n              onClick: () => sortTable(\"balance\"),\n              children: /*#__PURE__*/_jsxDEV(AiOutlineSortAscending, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortTable(\"isActive\"),\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortTable(\"registered\"),\n            children: \"Registered Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortTable(\"state\"),\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sortTable(\"country\"),\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.slice(-10).map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isActive ? /*#__PURE__*/_jsxDEV(RiCheckboxCircleLine, {\n              style: {\n                color: \"#3dda33\",\n                backgroundColor: \"transparent\",\n                paddingTop: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(RiCheckboxBlankCircleLine, {\n              style: {\n                color: \"#dc3545\",\n                backgroundColor: \"transparent\",\n                paddingTop: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: moment(user.registered).format(\"LLL\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"AFctQuGLS8AlfxP0aPgp1nN7A1c=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/estelio/Documents/React/Final/factoryww/src/components/table.js"],"names":["React","useState","useEffect","moment","RiCheckboxBlankCircleLine","RiCheckboxCircleLine","AiOutlineSortAscending","Table","podaci","setPodaci","data","setData","users","setUsers","sortedField","setSortedField","getPodaci","response","fetch","json","convertData","param","i","length","country","j","state","stateName","name","k","user","push","handleChange","value","filterData","resultArray","regex","RegExp","property","test","sortTable","sortedUsers","sort","a","b","e","target","slice","map","fullName","balance","isActive","color","backgroundColor","paddingTop","registered","format","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport {\n  RiCheckboxBlankCircleLine,\n  RiCheckboxCircleLine,\n} from \"react-icons/ri\";\n\nimport { AiOutlineSortAscending } from \"react-icons/ai\";\n\nimport \"./style/style.css\";\n\nconst Table = () => {\n  const [podaci, setPodaci] = useState([]);\n  const [data, setData] = useState(podaci);\n  const [users, setUsers] = useState([]);\n  const [sortedField, setSortedField] = React.useState(null);\n\n  useEffect(() => {\n    getPodaci();\n  }, []);\n\n  const getPodaci = async () => {\n    const response = await fetch(\"https://fww-demo.herokuapp.com/\");\n    const data = await response.json();\n    setPodaci(data);\n\n    convertData(data);\n  };\n\n  const convertData = (param) => {\n    let users = [];\n    for (let i = 0; i < param.length; i++) {\n      let country = param[i].country;\n      for (let j = 0; j < param[i].state.length; j++) {\n        let stateName = param[i].state[j].name;\n        for (let k = 0; k < param[i].state[j].users.length; k++) {\n          let user = {\n            country: country,\n            state: stateName,\n            ...param[i].state[j].users[k],\n          };\n          users.push(user);\n        }\n      }\n    }\n    setUsers(users);\n    setData(users);\n  };\n\n  const handleChange = (value) => {\n    filterData(value);\n  };\n\n  const filterData = (value) => {\n    let resultArray = [];\n    const regex = new RegExp(value, \"gi\");\n    if (!value) {\n      setData(users);\n    } else {\n      for (let i = 0; i < users.length; i++) {\n        for (const property in users[i]) {\n          if (regex.test(users[i][property])) {\n            resultArray.push(users[i]);\n            break;\n          }\n        }\n      }\n      setData(resultArray);\n    }\n  };\n\n  const sortTable = (param) => {\n    setSortedField(param);\n    let sortedUsers = [...data];\n\n    sortedUsers.sort((a, b) => {\n      if (a[sortedField] < b[sortedField]) {\n        return -1;\n      }\n      if (a[sortedField] > b[sortedField]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    setData(sortedUsers);\n  };\n  return (\n    <div>\n      <div className=\"Search\">\n        <input\n          className=\"inputName\"\n          type=\"text\"\n          placeholder=\"Search by Name, Balance, Activity (true or false) or Registration Data (ex. 2014-02-22)...\"\n          onChange={(e) => handleChange(e.target.value)}\n        />\n      </div>\n      <table>\n        <thead className=\"padding\">\n          <tr>\n            <th>\n              Full Name{\" \"}\n              <span className=\"sortSpan\" onClick={() => sortTable(\"fullName\")}>\n                <AiOutlineSortAscending />\n              </span>\n            </th>\n            <th>\n              Balance{\" \"}\n              <span className=\"sortSpan\" onClick={() => sortTable(\"balance\")}>\n                <AiOutlineSortAscending />\n              </span>\n            </th>\n            <th onClick={() => sortTable(\"isActive\")}>Active</th>\n            <th onClick={() => sortTable(\"registered\")}>Registered Date</th>\n            <th onClick={() => sortTable(\"state\")}>State</th>\n            <th onClick={() => sortTable(\"country\")}>Country</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.slice(-10).map((user) => (\n            <tr key={user.id}>\n              <td>{user.fullName}</td>\n              <td>{user.balance}</td>\n              <td>\n                {user.isActive ? (\n                  <RiCheckboxCircleLine\n                    style={{\n                      color: \"#3dda33\",\n                      backgroundColor: \"transparent\",\n                      paddingTop: \"5px\",\n                    }}\n                  />\n                ) : (\n                  <RiCheckboxBlankCircleLine\n                    style={{\n                      color: \"#dc3545\",\n                      backgroundColor: \"transparent\",\n                      paddingTop: \"5px\",\n                    }}\n                  />\n                )}\n              </td>\n              <td>{moment(user.registered).format(\"LLL\")}</td>\n              <td>{user.state}</td>\n              <td>{user.country}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}